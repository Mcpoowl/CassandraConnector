// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package cassandra.proxies;

public class ResultObject
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject resultObjectMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Cassandra.ResultObject";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		name("name"),
		recipe("recipe"),
		ResultObject_Query("Cassandra.ResultObject_Query");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public ResultObject(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Cassandra.ResultObject"));
	}

	protected ResultObject(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject resultObjectMendixObject)
	{
		if (resultObjectMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Cassandra.ResultObject", resultObjectMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Cassandra.ResultObject");

		this.resultObjectMendixObject = resultObjectMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'ResultObject.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static cassandra.proxies.ResultObject initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return cassandra.proxies.ResultObject.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static cassandra.proxies.ResultObject initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new cassandra.proxies.ResultObject(context, mendixObject);
	}

	public static cassandra.proxies.ResultObject load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return cassandra.proxies.ResultObject.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of name
	 */
	public final java.lang.String getname()
	{
		return getname(getContext());
	}

	/**
	 * @param context
	 * @return value of name
	 */
	public final java.lang.String getname(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.name.toString());
	}

	/**
	 * Set value of name
	 * @param name
	 */
	public final void setname(java.lang.String name)
	{
		setname(getContext(), name);
	}

	/**
	 * Set value of name
	 * @param context
	 * @param name
	 */
	public final void setname(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.name.toString(), name);
	}

	/**
	 * @return value of recipe
	 */
	public final java.lang.String getrecipe()
	{
		return getrecipe(getContext());
	}

	/**
	 * @param context
	 * @return value of recipe
	 */
	public final java.lang.String getrecipe(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.recipe.toString());
	}

	/**
	 * Set value of recipe
	 * @param recipe
	 */
	public final void setrecipe(java.lang.String recipe)
	{
		setrecipe(getContext(), recipe);
	}

	/**
	 * Set value of recipe
	 * @param context
	 * @param recipe
	 */
	public final void setrecipe(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String recipe)
	{
		getMendixObject().setValue(context, MemberNames.recipe.toString(), recipe);
	}

	/**
	 * @return value of ResultObject_Query
	 */
	public final cassandra.proxies.Query getResultObject_Query() throws com.mendix.core.CoreException
	{
		return getResultObject_Query(getContext());
	}

	/**
	 * @param context
	 * @return value of ResultObject_Query
	 */
	public final cassandra.proxies.Query getResultObject_Query(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		cassandra.proxies.Query result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ResultObject_Query.toString());
		if (identifier != null)
			result = cassandra.proxies.Query.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ResultObject_Query
	 * @param resultobject_query
	 */
	public final void setResultObject_Query(cassandra.proxies.Query resultobject_query)
	{
		setResultObject_Query(getContext(), resultobject_query);
	}

	/**
	 * Set value of ResultObject_Query
	 * @param context
	 * @param resultobject_query
	 */
	public final void setResultObject_Query(com.mendix.systemwideinterfaces.core.IContext context, cassandra.proxies.Query resultobject_query)
	{
		if (resultobject_query == null)
			getMendixObject().setValue(context, MemberNames.ResultObject_Query.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ResultObject_Query.toString(), resultobject_query.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return resultObjectMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final cassandra.proxies.ResultObject that = (cassandra.proxies.ResultObject) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Cassandra.ResultObject";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
